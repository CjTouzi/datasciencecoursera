library(ProjectTemplate)
library(TemplateProject)
library('ProjectTemplate')
install.packages("ProjectTemplate")
getwd()
setwd("ReproResearch/")
library("ProjectTempalte")
library("ProjectTemplate")
create.project("Repo")
dir()
setwd("./Repo/ ")
dir()
cd ..
getwd()
setwd("D:/GitHub/datasciencecoursera/")
create.project("Repro")
dir()
setwd("Repro")
dir()
act <- read.csv("./data/activity.csv")
head(act)
tail(act)
act <- data.table(read.csv("./data/activity.csv"))
library(data.table)
act <- data.table(read.csv("./data/activity.csv"))
install.packages("data.table")
library(data.table)
act <- data.table(read.csv("./data/activity.csv"))
head(act)
tail(act)
table( date ~ steps, data=act)
names(act)
table( act$date, act$steps)
table( act$date, sum(act$steps)
table( act$date, sum(act$steps))
sum(act$steps, by=act$date)
sum(act$steps)
sum(act$steps)
act$steps
sum(act$steps, na.rm= TRUE)
sum(act$steps, na.rm= TRUE, by=act$date)
names(act)
act[,sum(stepsPerDay), by=date]
act[,sum(steps), by=date]
act[,sum(steps, ra.rm=TRUE), by=date]
stepsPerday<-act[,sum(steps, ra.rm=TRUE), by=date]
act[,stepsPerday=sum(steps, ra.rm=TRUE), by=date]
stepsPerday=act[,sum(steps, ra.rm=TRUE), by=date]
library(ggplot2)
library(ggplot2)
ggplot(stepsPerday)
ggplot(stepsPerday$V1)
head(stepsPerday$V1)
stepsPerDay$date <- as.Date(stepsPerDay$date, "%Y-%m-%d")
stepsPerDay=act[,sum(steps, ra.rm=TRUE), by=date]
stepsPerDay$date <- as.Date(stepsPerDay$date, "%Y-%m-%d")
setnames(stepsPerDay$V1, "totalSteps")
names(stepsPerDay)
setnames(stepsPerDay,V1, totalSteps)
setnames
names(stepsPerDay)
setnames(stepsPerDay,V1, totalSteps)
setnames(stepsPerDay,"V1", "totalSteps")
names(stepsPerDay)
labs(x="Date", y="Total Steps", title="Total Steps per Day")
ggplot(stepsPerDay, aes(x=date, y=totalSteps)) +
geom_bar(fill="lightblue", stat="identity") +
labs(x="Date", y="Total Steps", title="Total Steps per Day")
ggplot(stepsPerDay, aes(x=date, y=totalSteps)) +
geom_bar(fill="blue", stat="identity") +
labs(x="Date", y="Total Steps", title="Total Steps per Day")
geom_bar(fill="orange", stat="identity") +
ggplot(stepsPerDay, aes(x=date, y=totalSteps)) +
geom_bar(fill="orang", stat="identity") +
labs(x="Date", y="Total Steps", title="Total Steps per Day")
ggplot(stepsPerDay, aes(x=date, y=totalSteps)) +
geom_bar(fill="orange", stat="identity") +
labs(x="Date", y="Total Steps", title="Total Steps per Day")
ggplot(stepsPerDay, aes(x=date, y=totalSteps)) +
geom_bar(scale_fill_gradient("Count", low = "green", high = "red")) +
labs(x="Date", y="Total Steps", title="Total Steps per Day")
ggplot(stepsPerDay, aes(x=date, y=totalSteps))
# ggplot(stepsPerDay, aes(x=date, y=totalSteps)) +
#         geom_bar(fill="orange", stat="identity") +
#         labs(x="Date", y="Total Steps", title="Total Steps per Day")
ggplot(stepsPerDay, aes(x=date, y=totalSteps))
ggplot(stepsPerDay, aes(x=date, y=totalSteps)) +
geom_bar(fill="orange", stat="identity")
ggplot(stepsPerDay, aes(x=date, y=totalSteps)) +
geom_bar(scale_fill_gradient("Count", low = "green", high = "red"))
ggplot(stepsPerDay, aes(x=date, y=totalSteps)) +
geom_bar(scale_fill_gradient("Count", low = "green", high = "red"),stat="identity")
ggplot(stepsPerDay, aes(x=date, y=totalSteps)) +
geom_bar(fill="orange", stat="identity") +
labs(x="Date", y="Total Steps", title="Total Steps per Day")
stepsPerDay=act[,sum(steps, ra.rm=TRUE), by=date]
stepsPerDay$date <- as.Date(stepsPerDay$date, "%Y-%m-%d")
setnames(stepsPerDay,"V1", "totalSteps")
act <- data.table(read.csv("./data/activity.csv"))
stepsPerDay=act[,sum(steps, ra.rm=TRUE), by=date]
stepsPerDay$date <- as.Date(stepsPerDay$date, "%Y-%m-%d")
setnames(stepsPerDay,"V1", "totalSteps")
names(stepsPerDay)
library(ggplot2)
ggplot(stepsPerDay, aes(x=date, y=totalSteps)) +
geom_bar(fill="orange", stat="identity") +
labs(x="Date", y="Total Steps", title="Total Steps per Day")
meanStepsPerDay <- mean(stepsPerDay$)
meanStepsPerDay <- mean(stepsPerDay$totalSteps)
mean(stepsPerDay$totalSteps)
median(stepsPerDay$totalSteps)
mean(stepsPerDay$totalSteps), na.rm=TRUE)
mean(stepsPerDay$totalSteps, na.rm=TRUE)
median(stepsPerDay$totalSteps,na.rm=TRUE)
names(act)
stepsPerInterval=act[,sum(steps, ra.rm=TRUE), by=interval]
names(stepsPerInterval)
setnames(stepsPerInterval,"V1", "totalSteps")
plot(stepsPerInterval$interval,"totalSteps" )
plot(stepsPerInterval$interval,stepsPerInterval$totalSteps)
plot(stepsPerInterval$totalSteps)
head(stepsPerInterval)
tail(stepsPerInterval)
stepsPerInterval
View(stepsPerInterval)
stepsPerInterval=act[,sum(steps, ra.rm=TRUE), by=interval]
stepsPerInterval=act[,mean(steps, ra.rm=TRUE), by=interval]
stepsPerInterval <- act[,mean(steps, ra.rm=TRUE), by=interval]
stepsPerInterval <- act[,sum(steps, ra.rm=TRUE), by=interval]
plot(act$steps)
plot(act$steps,style="l")
plot(act$steps,type="l")
stepsPerInterval <- ddply(activity, .(interval), summarize, avgSteps=mean(steps, na.rm=TRUE))
library(plyr)
stepsPerInterval <- ddply(act, .(interval), summarize, avgSteps=mean(steps, na.rm=TRUE))
stepsPerInterval <- ddply(act, .(interval), summarize, avgSteps=mean(steps, na.rm=TRUE))
names(stepsPerInterval)
head(stepsPerInterval)
plot(stepsPerInterval$avgSteps)
plot(stepsPerInterval$avgSteps, type="l")
maxstepsPerInterval <- stepsPerInterval$interval[which.max(stepsPerInterval$avgSteps)]
maxstepsPerInterval
maxstepsTime<- which.max(stepsPerInterval$avgSteps)
maxstepsTime
maxstepsTime<- which.max(stepsPerInterval$avgSteps)*5/60
maxstepsTime
act$date[3]
start <- as.POSIXct(act$date[[1]])
start
interval <- 60
end <- start + as.difftime(1, units="days")
seq(from=start, by=interval*60, to=end)
interval <- 5
end <- start + as.difftime(1, units="days")
seq(from=start, by=interval*60, to=end)
TimeSeq<-seq(from=start, by=interval*60, to=end)
plot(TimeSeq, stepsPerInterval$avgSteps, type="l")
length(stepsPerInterval$avgSteps)
start <- as.POSIXct(act$date[[1]])
interval <- 5
end <- start + as.difftime(0, units="days")
TimeSeq<-seq(from=start, by=interval*60, to=end)
plot(TimeSeq, stepsPerInterval$avgSteps, type="l")
TimeSeq
end <- start + as.difftime(1, units="days")
TimeSeq<-seq(from=start, by=interval*60, to=end)
TimeSeq
plot(TimeSeq[1:288], stepsPerInterval$avgSteps, type="l")
maxstepsTime
maxstepsPerInterval <- TimeSeq[maxstepsTime]
maxstepsPerInterval
maxstepsTime<- which.max(stepsPerInterval$avgSteps)*5/60
maxstepsTime<- which.max(stepsPerInterval$avgSteps)
maxstepsPerInterval <- TimeSeq[maxstepsTime]
maxstepsPerInterval
strftime(maxstepsPerInterval, format="%H:%M:%S")
cbind(stepsPerInterval, timeSeq=TimeSeq)
cbind(stepsPerInterval, timeSeq=TimeSeq[1:288])
stepsPerInterval< -cbind(stepsPerInterval, timeSeq=TimeSeq[1:288])
stepsPerInterval<-cbind(stepsPerInterval, timeSeq=TimeSeq[1:288])
length(stepsPerInterval$avgSteps)
plot(stepsPerInterval$timeSeq, stepsPerInterval$avgSteps, type="l")
maxstepsPerInterval <- stepsPerInterval$timeSeq[which.max(stepsPerInterval$avgSteps)]
strftime(maxstepsPerInterval, format="%H:%M:%S")
sum(is.na(act$steps)
sum(is.na(act$steps))
is.na(act$steps)
length(is.na(act$steps))
qMissingActivity <- sum(is.na(activity$steps), na.rm=FALSE)
qMissingActivity <- sum(is.na(act$steps), na.rm=FALSE)
totalIntervals <- nrow(activity)
qMissingActivity
sum((is.na(act$steps))
sum((is.na(act$steps)))
sum(is.na(act$steps),a.rm=FALSE)
hist(act$steps,by=act$interval)
sum (is.na(act$steps), act$interval)
sum (is.na(act$steps), by=act$interval)
act <- cind(act, NA= is.na(act$steps))
act <- cind(act, NAV= is.na(act$steps))
act <- cbind(act, NAV= is.na(act$steps))
table(act$NAV, act$interval)
hist(act$NAV, act$interval)
table(act$NAV, act$interval)
plot(act$NAV, act$interval)
plot(act$interval,act$NAV)
fret(act$interval,act$NAV)
freq(act$interval,act$NAV)
hist(act$interval,act$NAV)
naTable <- table (act$interval,act$NAV)
naTable
hist(naTable)
naTable <- table (act$NAV,act$interval)
naTable
hist(naTable)
hist(naTable)
boxplot(naTable)
plot(table (act$NAV,act$interval))
plot(table(act$NAV,act$interval))
plot(table(act$NAV,act$interval), col="gray")
plot(table(act$NAV,act$interval), col="blue")
barplot(act$NAV)
barplot(naTable)
naTable <- table (act$NAV,act$interval)
barplot(naTable)
naTable <- table (act$NAV)
barplot(naTable)
naTable <- table (act$NAV, act$interval)
naTable
barplot(naTable)
barplot(naTable, main="Car Distribution by Gears and VS",
barplot(naTable, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts))
barplot(naTable, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts))
barplot(naTable, main="Car Distribution by Gears and VS",xlab="Number of Gears", col=c("darkblue","red"),legend = rownames(counts))
barplot(naTable, main="Car Distribution by Gears and VS",xlab="Number of Gears", col=c("darkblue","red"),legend = rownames(naTable))
barplot(naTable[1,20], main="Car Distribution by Gears and VS",xlab="Number of Gears", col=c("darkblue","red"),legend = rownames(naTable))
barplot(naTable[1,200], main="Car Distribution by Gears and VS",xlab="Number of Gears", col=c("darkblue","red"),legend = rownames(naTable))
barplot(naTable[1,200], main="Car Distribution by Gears and VS",xlab="Number of Gears", col=c("darkblue","red"),legend = rownames(naTable))
barplot(naTable[1:200], main="Car Distribution by Gears and VS",xlab="Number of Gears", col=c("darkblue","red"),legend = rownames(naTable))
barplot(naTable[1:20], main="Car Distribution by Gears and VS",xlab="Number of Gears", col=c("darkblue","red"),legend = rownames(naTable))
barplot(naTable[1:20], main="Car Distribution by Gears and VS",
xlab="Number of Gears",
col=c("darkblue","red"),
legend = rownames(naTable),
beside = FALSE)
counts <- table (act$NAV, act$interval)
barplot(counts, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts))
barplot(counts[1:20], main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts))
barplot(counts[1:20], main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts) , beside =FALSE)
legend = rownames(counts) , beside =T)
barplot(counts[1:20], main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts) , beside =T)
barplot(as.matrix(counts), main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts))
barplot(as.matrix(counts), main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts), beside=FALSE)
barplot(as.matrix(counts[1:20]), main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts), beside=FALSE)
barplot(as.matrix(counts[1:20]), main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts), beside=FALSE)
barplot(as.matrix(counts), main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts), beside=FALSE)
barplot(naTable[1:710], main="Car Distribution by Gears and VS",
xlab="Number of Gears",
col=c("darkblue","red"),
legend = rownames(naTable),
beside = FALSE)
barplot(counts[1:710], main="Car Distribution by Gears and VS",
xlab="Number of Gears",
col=c("darkblue","red"),
legend = rownames(counts),
beside = FALSE)
barplot(counts[1:790], main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts), beside=FALSE)
barplot(counts[1:1000], main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts), beside=FALSE)
NATable <- table (act$NAV, act$interval)
NATable
sd(act$steps)
sd(act$steps, na.rm=TRUE)
sd(stepsPerInterval$avgSteps, na.rm=TRUE)
sd(act$steps, na.rm=TRUE)/sqrt(length(act$steps))
sd(stepsPerInterval$avgSteps, na.rm=TRUE)/sqrt(stepsPerInterval$avgSteps))
sd(stepsPerInterval$avgSteps, na.rm=TRUE)/sqrt(length(stepsPerInterval$avgSteps))
stepsPerDay <- ddply(act, .(date), summarize, avgSteps=mean(steps, na.rm=TRUE))
length(stepsPerDay)
nrows(stepsPerDay)
nrow(stepsPerDay)
plot(stepsPerDay)
plot(stepsPerDay, type="l")
plot(stepsPerDay, type="l")
act$steps[is.na(act$steps)] <- mean(act$steps, na.rm= TURE)
act$steps[is.na(act$steps)] <- mean(act$steps, na.rm= TRUE)
sum(is.na(act$steps),na.rm=FALSE)
library(data.table)
act <- data.table(read.csv("./data/activity.csv"))
stepsPerDay=act[,sum(steps, ra.rm=TRUE), by=date]
stepsPerDay$date <- as.Date(stepsPerDay$date, "%Y-%m-%d")
setnames(stepsPerDay,"V1", "totalSteps")
names(stepsPerDay)
start <- as.POSIXct(act$date[[1]])
interval <- 5
end <- start + as.difftime(1, units="days")
TimeSeq<-seq(from=start, by=interval*60, to=end)
library(ggplot2)
ggplot(stepsPerDay, aes(x=date, y=totalSteps)) +
geom_bar(fill="orange", stat="identity") +
labs(x="Date", y="Total Steps", title="Total Steps per Day")
mean(stepsPerDay$totalSteps, na.rm=TRUE)
median(stepsPerDay$totalSteps,na.rm=TRUE)
library(plyr)
stepsPerInterval <- ddply(act, .(interval), summarize, avgSteps=mean(steps, na.rm=TRUE))
stepsPerInterval<-cbind(stepsPerInterval, timeSeq=TimeSeq[1:288])
plot(stepsPerInterval$timeSeq, stepsPerInterval$avgSteps, type="l")
maxstepsPerInterval <- stepsPerInterval$timeSeq[which.max(stepsPerInterval$avgSteps)]
strftime(maxstepsPerInterval, format="%H:%M:%S")
sum(is.na(act$steps),na.rm=FALSE)
act <- cbind(act, MisRemovedSteps=act$steps)
act$MisRemovedSteps[is.na(act$MisRemovedSteps)] <- mean(act$MisRemovedSteps, na.rm= TRUE)
sum(is.na(act$MisRemovedSteps),na.rm=FALSE)
library(data.table)
act <- data.table(read.csv("./data/activity.csv"))
MisRemovedAct <- act
MisRemovedAct <- act
MisRemovedAct[is.na(MisRemovedAct$steps)] <- mean(MisRemovedAct$steps, na.rm= TRUE)
MisRemovedAct[is.na(MisRemovedAct$steps)] <- mean(MisRemovedAct$steps, na.rm= TRUE)
sum(is.na(MisRemovedAct),na.rm=FALSE)
stepsPerDayNew=MisRemovedAct[,sum(steps, ra.rm=TRUE), by=date]
stepsPerDayNew$date <- as.Date(stepsPerDay$date, "%Y-%m-%d")
setnames(stepsPerDayNew,"V1", "totalSteps")
names(stepsPerDay)
mean(stepsPerDayNew$totalSteps)
median(stepsPerDayNew$totalSteps)
mean(stepsPerDayNew$totalSteps);mean(stepsPerDay$totalSteps)
median(stepsPerDayNew$totalSteps);median(stepsPerDay$totalSteps)
mean(stepsPerDayNew$totalSteps);mean(stepsPerDay$totalSteps,na.rm=TRUE)
median(stepsPerDayNew$totalSteps);median(stepsPerDay$totalSteps,na.rm=TRUE)
print("new",median(stepsPerDayNew$totalSteps);median(stepsPerDay$totalSteps,na.rm=TRUE)
print("new: %d",median(stepsPerDayNew$totalSteps);median(stepsPerDay$totalSteps,na.rm=TRUE)
print("new %d", median(stepsPerDayNew$totalSteps));median(stepsPerDay$totalSteps,na.rm=TRUE)
help(print)
cat("new mdeian", median(stepsPerDayNew$totalSteps));median(stepsPerDay$totalSteps,na.rm=TRUE)
cat("new:", median(stepsPerDayNew$totalSteps));cat("old: ", median(stepsPerDay$totalSteps,na.rm=TRUE))
cat("new:", median(stepsPerDayNew$totalSteps));cat("\nold: ", median(stepsPerDay$totalSteps,na.rm=TRUE))
cat("new median:", median(stepsPerDayNew$totalSteps));cat("\told median: ", median(stepsPerDay$totalSteps,na.rm=TRUE))
cat("new median:", median(stepsPerDayNew$totalSteps));cat("\t\told median: ", median(stepsPerDay$totalSteps,na.rm=TRUE))
cat("new mean:",mean(stepsPerDayNew$totalSteps)); cat("new mean:",mean(stepsPerDay$totalSteps,na.rm=TRUE))
cat("new mean:",mean(stepsPerDayNew$totalSteps)); cat("\t\told mean:",mean(stepsPerDay$totalSteps,na.rm=TRUE))
labs(x="Date", y="Total Steps", title="Total Steps per Day after Missing Data Imputting")
library(ggplot2)
ggplot(stepsPerDayNew, aes(x=date, y=totalSteps)) +
geom_bar(fill="orange", stat="identity") +
labs(x="Date", y="Total Steps", title="Total Steps per Day after Missing Data Imputting")
stepsPerDayNew=MisRemovedAct[,sum(steps, ra.rm=TRUE), by=date]
ggplot(stepsPerDayNew, aes(x=date, y=totalSteps)) +
geom_bar(fill="orange", stat="identity") +
labs(x="Date", y="Total Steps", title="Total Steps per Day after Missing Data Imputting")
stepsPerDayNew=MisRemovedAct[,sum(steps, ra.rm=TRUE), by=date]
stepsPerDayNew$date <- as.Date(stepsPerDay$date, "%Y-%m-%d")
setnames(stepsPerDayNew,"V1", "totalSteps")
names(stepsPerDay)
library(ggplot2)
ggplot(stepsPerDayNew, aes(x=date, y=totalSteps)) +
geom_bar(fill="orange", stat="identity") +
labs(x="Date", y="Total Steps", title="Total Steps per Day after Missing Data Imputting")
names(stepsPerDayNew)
hist(stepsPerDayNew)
hist(stepsPerDayNew$totalSteps)
hist(stepsPerDayNew$totalSteps, stepsPerDay$date)
ggplot(stepsPerDay, aes(x=date, y=totalSteps)) +
geom_bar(fill="orange", stat="identity") +
labs(x="Date", y="Total Steps", title="Total Steps per Day")
stepsPerDayNew=MisRemovedAct[,sum(steps, ra.rm=TRUE), by=date]
stepsPerDayNew$date <- as.Date(stepsPerDay$date, "%Y-%m-%d")
setnames(stepsPerDayNew,"V1", "totalSteps")
stepsPerDayNew=MisRemovedAct[,sum(steps, ra.rm=TRUE), by=date]
stepsPerDayNew$date <- as.Date(stepsPerDayNew$date, "%Y-%m-%d")
setnames(stepsPerDayNew,"V1", "totalSteps")
names(stepsPerDayNew)
library(ggplot2)
ggplot(stepsPerDayNew, aes(x=date, y=totalSteps)) +
geom_bar(fill="orange", stat="identity") +
labs(x="Date", y="Total Steps", title="Total Steps per Day after Missing Data Imputting")
which.max(stepsPerDay$totalSteps)
stepsPerDay$date[which.max(stepsPerDay$totalSteps)]
max(stepsPerDay$totalSteps)
max(stepsPerDayNew$totalSteps)
stepsPerDayNew$date[which.max(stepsPerDayNew$totalSteps)]
sum(is.na(act$steps),na.rm=FALSE)
sum(is.na(act$steps),na.rm=FALSE)/length(act$steps)
View(MisRemovedAct)
MisRemovedAct <- act
MisRemovedAct$steps[is.na(MisRemovedAct$steps)] <- mean(MisRemovedAct$steps, na.rm= TRUE)
sum(is.na(MisRemovedAct),na.rm=FALSE)
MisRemovedAct <- act
MisRemovedAct$steps[is.na(MisRemovedAct$steps)] <- mean(MisRemovedAct$steps, na.rm= TRUE)
sum(is.na(MisRemovedAct$steps),na.rm=FALSE)
stepsPerDayNew=MisRemovedAct[,sum(steps, ra.rm=TRUE), by=date]
stepsPerDayNew$date <- as.Date(stepsPerDayNew$date, "%Y-%m-%d")
setnames(stepsPerDayNew,"V1", "totalSteps")
names(stepsPerDayNew)
cat("new mean:",mean(stepsPerDayNew$totalSteps))
cat("\t\told mean:",mean(stepsPerDay$totalSteps,na.rm=TRUE))
cat("new median:", median(stepsPerDayNew$totalSteps))
cat("\t\told median: ", median(stepsPerDay$totalSteps,na.rm=TRUE))
library(ggplot2)
ggplot(stepsPerDayNew, aes(x=date, y=totalSteps)) +
geom_bar(fill="orange", stat="identity") +
labs(x="Date", y="Total Steps", title="Total Steps per Day after Missing Data Imputting")
stepsPerDayNew$date[which.max(stepsPerDayNew$totalSteps)]
max(stepsPerDayNew$totalSteps)
weekdays(MisRemovedAct$date)[1:10]
weekdays(MisRemovedAct$date[1:10])
start <- as.POSIXct(act$date[[1]])
weekdays(start)
weekdays(as.POSIXct(act$date[[1]]))
weekdays(as.POSIXct(act$date))
View(stepsPerInterval)
weekdays(as.POSIXct(stepsPerDayNew$date))
factor(weekdays(as.POSIXct(stepsPerDayNew$date)))
weekdays(as.POSIXct(stepsPerDayNew$date)) %in% c('Sunday','Saturday')
weekdays(as.POSIXct(stepsPerDayNew$date)) #%in% c('Sunday','Saturday')
weekdays(as.POSIXct(stepsPerDayNew$date)) %in% c('Sunday','Saturday')
cbind (stepsPerDay, isWeekend=weekdays(as.POSIXct(stepsPerDayNew$date)) %in% c('Sunday','Saturday'))
stepsPerDayNew <- cbind (stepsPerDayNew, isWeekend=weekdays(as.POSIXct(stepsPerDayNew$date)) %in% c('Sunday','Saturday'))
MisRemovedAct <- cbind (MisRemovedAct, isWeekend=weekdays(as.POSIXct(stepsPerDayNew$date)) %in% c('Sunday','Saturday'))
MisRemovedAct$isWeekend < -as.factor(MisRemovedAct$isWeekend)
MisRemovedAc$isWeekend <- ifelse(weekdays(as.POSIXct(stepsPerDayNew$date)) %in% c('Sunday','Saturday'), "weekend","weekday")
MisRemovedAct$isWeekend <- ifelse (weekdays(as.Date(MisRemovedAct$date)) %in%
c("Saturday", "Sunday"), "weekend", "weekday")
MisRemovedAct$isWeekend < -as.factor(MisRemovedAct$isWeekend)
MisRemovedAct$isWeekend <- ifelse (weekdays(as.Date(MisRemovedAct$date)) %in%
c("Saturday", "Sunday"), "weekend", "weekday")
factor(MisRemovedAct$isWeekend)
as.factor(MisRemovedAct$isWeekend)
MisRemovedAct$isWeekend<-as.factor(MisRemovedAct$isWeekend)
