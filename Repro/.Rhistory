install.packages('RMySQL', type='source')
library(RMySQL)
install.packages('RMySQL', type='source')
install.packages('RMySQL', type='source')
install.packages('RMySQL', type='source')
install.packages('RMySQL', type='source')
library('RMySQL')
R.version()
R.version
R.version
R.version
install.packages(“RMySQL”, type = “source”)
install.packages(“RMySQL”,type = “source”)
install.packages("RMySQL”,type = “source”)
)
install.packages(“RMySQL”,type = “source”)
source('D:/GitHub/datasciencecoursera/GC_Data/src/Week2.R', echo=TRUE)
source('D:/GitHub/datasciencecoursera/Repro/reports/style.R', echo=TRUE)
*[Dataset](https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip)
library(data.table)
act <- data.table(read.csv("./data/activity.csv"))
act <- data.table(read.csv("D:/GitHub/datasciencecoursera/Repro/data/activity.csv"))
act <- data.table(read.csv("D:/GitHub/datasciencecoursera/Repro/data/activity.csv"))
In this section, we preform our analysis on the acitivity data both daily and 5-mininte intervally.
setwd("./datasciencecoursera/")
Sys.setlocale("LC_TIME", "English")
ggplot(stepsPerDay, aes(x=date, y=totalSteps)) +
geom_bar(fill="orange", stat="identity") +
labs(x="Date", y="Total Steps", title="Total Steps per Day")
stepsPerDay=act[,sum(steps, ra.rm=TRUE), by=date]
stepsPerDay$date <- as.Date(stepsPerDay$date, "%Y-%m-%d")
setnames(stepsPerDay,"V1", "totalSteps")
names(stepsPerDay)
library(ggplot2)
ggplot(stepsPerDay, aes(x=date, y=totalSteps)) +
geom_bar(fill="orange", stat="identity") +
labs(x="Date", y="Total Steps", title="Total Steps per Day")
```{r, echo=c(1:4), message=FALSE}
```{r, echo=TRUE, results='hold'}
source('D:/GitHub/datasciencecoursera/Repro/src/peer1.R')
source('~/.active-rstudio-document', echo=TRUE)
stepsPerInterval$avgSteps[maxstepsPerInterval]
stepsPerInterval$avgSteps[which.max(stepsPerInterval$avgSteps)]
# create a time seqence
start <- as.POSIXct(act$date[[1]])
interval <- 5
end <- start + as.difftime(1, units="days")
TimeSeq<-seq(from=start, by=interval*60, to=end)
TimeSeq[1:10]
Time(TimeSeq[1:10])
TimeSeq<- strftime(TimeSeq, format="%H:%M:%S")
Time(TimeSeq[1:10])
TimeSeq[1:10]
TimeSeq<-seq(from=start, by=interval*60, to=end)
hour(Time[1])
hour(TimeSeq[1])
hour(TimeSeq[30])
start, by=interval*60, to=end)
source('~/.active-rstudio-document', echo=TRUE)
TimeSeq<-seq(from=start, by=interval*60, to=end)
library(plyr)
stepsPerInterval <- ddply(act, .(interval), summarize, avgSteps=mean(steps, na.rm=TRUE))
stepsPerInterval<-cbind(stepsPerInterval, timeSeq=TimeSeq[1:288])
maxstepsPerInterval <- stepsPerInterval$timeSeq[which.max(stepsPerInterval$avgSteps)]
stepsPerInterval$avgSteps[which.max(stepsPerInterval$avgSteps)]
strftime(maxstepsPerInterval, format="%H:%M:%S")
library(ggplot2)
require(gridExtra)
p1 <-
ggplot(stepsPerInterval, aes(x=TimeSeq[1:288], y=avgSteps)) +
xlab("Time")+
geom_line()+
ggtitle("Fig2: Average steps (5mins interval)")+
theme(plot.title = element_text(lineheight=0.8, face=quote(bold)))+
theme(axis.text.x = element_text(size=12, colour = rgb(0,0,0)))+
theme(axis.text.y = element_text(size=12, colour = rgb(0,0,0)))+
theme(axis.title.y = element_text(size=17,  face=quote(bold), colour = rgb(0,0,0)))+
theme(axis.title.x = element_text(size=17,  face=quote(bold), colour = rgb(0,0,0))) +
grid.arrange(p1,ncol=1)
grid.arrange(p1,ncol=1)
start <- as.POSIXct(act$date[[1]], )
start <- as.POSIXct(act$date[[1]], )
setwd("./Repro")
ggplot(stepsPerDay, aes(x=date, y=totalSteps)) +
geom_bar(fill="orange", stat="identity") +
labs(x="Date", y="Total Steps", title="Fig1: Total Steps per Day")
